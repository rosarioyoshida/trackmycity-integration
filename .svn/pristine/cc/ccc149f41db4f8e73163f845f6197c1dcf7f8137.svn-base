package br.com.trackmycity.controller.rest;

import java.util.List;

import javax.inject.Inject;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import org.codehaus.jackson.map.annotate.JsonView;

import br.com.trackmycity.beans.google.GeoLocation;
import br.com.trackmycity.config.jackson.Views;
import br.com.trackmycity.controller.rest.to.LocationTO;
import br.com.trackmycity.dao.AlertTypeDAO;
import br.com.trackmycity.dao.UserAlertDAO;
import br.com.trackmycity.interceptors.Statistics;
import br.com.trackmycity.interceptors.Transactional;
import br.com.trackmycity.models.UserAlert;

@Path("alert")
public class UserAlertController {
	
	@Inject private UserAlertDAO userAlertDAO;
	@Inject private AlertTypeDAO alertTypeDAO;
	
	@GET @Path("{id}") @Produces(MediaType.APPLICATION_JSON)
	public UserAlert find(@PathParam("id") Long id) {
		UserAlert found = userAlertDAO.findComplete(id);
		return found;
	}
	
	@Statistics
	@POST @Path("/listResumeWithinDistance") @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON)
	@JsonView(Views.Resume.class)
	public List<UserAlert> lisResumetWithinDistance(LocationTO locationTO) {
		GeoLocation location = GeoLocation.convertDegreesToRadians(locationTO.getLat(), locationTO.getLng());
		GeoLocation[] boundingCoordinates = location.boundingCoordinates(locationTO.getDistance());
		List<UserAlert> list = userAlertDAO.lisResumetWithinDistance(location, boundingCoordinates, locationTO.getDistance());
		return list;
	}
	
	@Transactional
	@POST @Path("/") @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON)
	public UserAlert create(UserAlert userAlert) {
		userAlert = userAlertDAO.merge(userAlert);
		return userAlert;
	}

	@GET @Path("/list") @Produces(MediaType.APPLICATION_JSON)
	public List<UserAlert> list() {
		List<UserAlert> list = userAlertDAO.list();
		return list;
	}
}
