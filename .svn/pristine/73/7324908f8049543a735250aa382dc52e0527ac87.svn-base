package br.com.trackmycity.rest;

import java.util.Arrays;
import java.util.List;

import javax.inject.Inject;
import javax.persistence.EntityManager;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import br.com.trackmycity.dao.AlertTypeDAO;
import br.com.trackmycity.dao.UserAlertDAO;
import br.com.trackmycity.interceptors.Transactional;
import br.com.trackmycity.models.AlertType;
import br.com.trackmycity.models.UserAlert;

@Path("/teste")
public class TesteResteasy {

	@Inject private AlertTypeDAO alertTypeDAO;
	@Inject private UserAlertDAO userAlertDAO;
	@Inject private EntityManager em;
	
	@GET @Path("/hello") @Produces(MediaType.APPLICATION_JSON)
	public AlertType hello() {
		return alertTypeDAO.find(1l);
	}

	@GET @Path("/list") @Produces(MediaType.APPLICATION_JSON)
	public List<AlertType> list() {
		return alertTypeDAO.list(Arrays.asList(alertTypeDAO.getCriteriaBuilder().asc(alertTypeDAO.getRoot().get("name"))));
	}

	@GET @Path("/listAlerts") @Produces(MediaType.APPLICATION_JSON)
	public List<UserAlert> listAlerts() {
		List<UserAlert> list = userAlertDAO.list(Arrays.asList(userAlertDAO.getCriteriaBuilder().asc(userAlertDAO.getRoot().get("id"))));;
		return list;
	}
	

	@Transactional
	@POST @Path("/") @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON)
	public UserAlert save(UserAlert userAlert) {
		userAlert.getAddress().setAlert(userAlert);
		userAlert = em.merge(userAlert);
		//userAlertDAO.merge(userAlert);
		return userAlert;
	}
	
}
